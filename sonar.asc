:sonar: https://wiki.eclipse.org/Sonar[SonarQube]
:experimental:
== Qualité du code

ifdef::slides[:leveloffset: -1]

=== À minima : option de votre EDI

Les éditeurs permettent souvent de régler le niveau de détail des informations proposées.

[NOTE]
====
Par exemple, dans {eclipse}, on peut modifier le niveau de `warning`: menu:Preferences[Java > Compiler > Errors/Warnings]

image::warnings.png[]
====

=== Outils de base

Il existe des outils dédiés :

- http://findbugs.sourceforge.net/[Findbugs]
- http://sourceforge.net/projects/pmd/[PMD]
- http://checkstyle.sourceforge.net/[Checkstyle]
- http://eclemma.org/jacoco/[Jacoco]

=== Sonar

L'outil {sonar} permet de "mesurer" les problèmes de qualité en *dette technique*
(le temps requis pour remédier à la faible qualité)

.Dette technique (source http://docs.sonarqube.org/display/HOME/Developers'+Seven+Deadly+Sins)
image::TechDebtPyramid.png[]

ifdef::slides[=== Sonar (suite)]

Les aspects qui sont surtout considérés :

[%step]
- Bugs (réels ou potentiels)
- Violation des standards de codage
- Duplications de code
- Manque de tests unitaires
- Mauvaise distribution de la complexité
- Code Spaghetti
- Pas assez (ou trop) de commentaires

ifdef::slides[:leveloffset: 0]
