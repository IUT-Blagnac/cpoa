== Retour sur les Membres `static`

[source,java]
---------
class VariableDemo
{
  static int count=0;
  public void increment()
  {
    count++;
  }
  public static void main(String args[])
  {
    VariableDemo obj1=new VariableDemo();
    VariableDemo obj2=new VariableDemo();
    obj1.increment();
    obj2.increment();
    System.out.println("Obj1: count is="+obj1.count);
    System.out.println("Obj2: count is="+obj2.count);
  }
}
---------

Output:

..........
Obj1: count is=2
Obj2: count is=2
..........

ifdef::slides[:leveloffset: -1]

=== Membres `static` (suite)

Comment ça marche :

[%step]
- Les variables `static` sont initialisées au chargement de la classe.
- Les variables `static` d'une classe sont
initialisées avant que la moindre instance ne soit créée.
- Les variables `static` sont initialisées avant que la moindre méthode `static` ne s'exécute.

=== Méthodes `static`


[source,java]
---------
import java.lang.Math;

class Another {
  public static void main(String[] args) {
    int result;

    result = Math.min(10, 20); //calling static method min by writing class name

    System.out.println(result);
    System.out.println(Math.max(100, 200));
  }
}
---------

=== Méthodes `static` et appel aux méthodes non-statiques

[source,java]
---------
public class Main {
    public static void main(String[] args) {
        Main p = new Main();
        k();
    }

    protected Main() {
        System.out.print("1234");
    }

    protected void k() {
    }
}
---------

À l'exécution :

[source,java]
---------
Main p = new Main();  // => prints 1234
k()                   // => raises error
---------

ifdef::slides[=== Méthodes `static` et appel aux méthodes non-statiques (suite)]

[quote]
_______________________
Static method cannot call non-static methods
_______________________

Bien sûr que si, sauf qu'il faut que cette dernière *porte sur une instance* de la classe.

ifdef::slides[=== Méthodes `static` et appel aux méthodes non-statiques (suite)]

[quote]
_______________________
Constructors are kind of a method with no return type.
_______________________

En fait il vaudrait mieux les considérer comme une sorte de méthode statique.
En effet elle ne requièrent pas de porter sur un objet!

NOTE: cf. la discussion http://stackoverflow.com/questions/10513633/static-method-access-to-non-static-constructor


ifdef::slides[:leveloffset: 0]
