== Point sur le TD de la semaine passée

ifdef::slides[:leveloffset: -1]

=== Principes de conception

NOTE: Pas de nouveau principes de conception particuliers pour le
patron <<singleton>>

=== Patron Singleton

[icon="{iconsdir}/pattern.jpeg"]
[NOTE]
.Design pattern : *Singleton*
====
include::pattern/singleton.txt[]
====

ifndef::slides[=== Patron Singleton]

.Quelques exemples de description du patron Singleton
image::google-singleton.png[link="images/google-singleton.png"]

=== Exemple d'utilisation du patron

ifndef::slides[.Exemple d'utilisation du patron]
image::xxx.png[link="images/xxx.png"]

=== Autre exemple concret

NOTE: Cet exemple est tiré de xxx[ce cours].

*Le problème*

Blabla

ifdef::slides[=== Autre exemple concret (suite)]

*La solution*

ifndef::slides[.Application du pattern <<singleton>>
(xxx[source])]
image::xxx.png[link="xxx"]

=== Implémentations Java

Pour résumer les (bonnes) implémentations Java :

- Initialisation directe de la variable instance.
- Initialisation dans un bloc `static`.
- Utilisation d'un `enum` à la place d'une classe.

ifdef::slides[:leveloffset: -1]

==== Initialisation directe de la variable instance

[source,java]
--------
    public final class Singleton {
      private final static volatile Singleton instance = new Singleton();
      public final static Singleton getInstance() { return instance; }
      private Singleton() {}
      }
--------

==== Initialisation dans un bloc `static`

[source,java]
--------
public final class Singleton {
        private static volatile Singleton instance = null;
        static {
          instance = new Singleton();
        }
        public final static Singleton getInstance() { return instance; }
        private Singleton() {}
        }
--------

==== Utilisation d'un `enum` à la place d'une classe

NOTE: On n'a pas vu cette implémentation en TD!

[source,java]
--------
        public enum Singleton {
          SINGLETON;
          public static Singleton getInstance() { return SINGLETON; }
        }
--------

ifdef::slides[==== Exemple d'utilisation d'un `enum`]

Exemple d'utilisation de ce type d'implémentation

// Vincent


[source,java]
--------
public enum MonSingleton {
  INSTANCE;

  private String attribute = "World";

  public String sayHello() {
    return "Hello " + attribute;
  }
}
--------

Et on l'appelle avec :

[source,java]
--------
MonSingleton.INSTANCE.sayHello();
--------

ifdef::slides[:leveloffset: +1]
