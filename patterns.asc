// ------------------------------------------
//  Created by Jean-Michel Bruel on 2014-07.
//  Copyright (c) 2014 IRIT/U. Toulouse. All rights reserved.
// ------------------------------------------
= Design patterns

ifndef::definitions[]
include::definitions.txt[]
endif::definitions[]
ifndef::myasciidoconf[]
include::asciidoc.conf[]
endif::myasciidoconf[]

== Introduction

[%step]
- Supercanard
- Tests
- Conclusion

== Patrons à aborder

[%step]
* Ceux déjà pratiqués
** <<Singleton>>
** <<Observateur>>
** Fabrique (_factory_) (cf. parser sax)
* Les "pressentis"
- <<Stratégie>>
- Itérateur
- Composite
- Etat
- Proxy
* Les nouveaux
- Décorateur
- Commande
- Adaptateur
- Façade
- Patron de méthode
* Les "avancés"
- Chaînes de responsabilité
- Visiteur
* Ceux qu'on n'aura pas le temps d'aborder
- Prototype
- Mémento
- Médiateur
- Interprète
- Poids-mouche
- Monteur
- Pont
* Concepts avancés
- Patrons de patrons (exemple du MVC)
- Anti-patrons


include::supercanard.txt[]

[appendix]
:numbered!:
include::glossaire.txt[]

include::refs.txt[]
