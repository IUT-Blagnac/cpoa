== Le patron Adaptateur

ifdef::slides[:leveloffset: -1]

image::adaptateur.jpg[]

=== Le problème

On veut pouvoir :

[%step]
- utiliser une classe existante, mais dont *l'interface ne coïncide pas* avec celle escomptée.
- créer une classe réutilisable qui collabore avec des classes sans relations
avec elle et encore inconnues, c'est-à-dire avec des classes qui n'auront *pas
nécessairement des interfaces compatibles*.
- vous avez besoin d'utiliser plusieurs sous-classes existantes, mais
l'*adaptation de leur interface* par dérivation de chacune d'entre elles est
impraticable. Un adaptateur objet peut adapter l'interface de sa classe parente.
+
NOTE: Ce dernier cas ne concerne que le cas "adaptateur d'objet"

=== Exemple concret : le retour des canards

- L'existant :

ifdef::slides[.La classe Canard]
[source,java]
----------
public interface Canard {
  public void cancaner();
  public void voler();
}

public class Colvert implements Canard {
  public void cancaner() {
    System.out.println("Coincoin");
  }
  public void voler() {
    System.out.println("Je vole");
  }
}
----------

ifdef::slides[=== Exemple concret : le retour des canards]
- Le "presque canard" :

ifdef::slides[.La classe Canard]
[source,java]
----------
public interface Dindon {
  public void glouglouter();
  public void voler();
}

public class DindonSauvage implements Dindon {
  public void glouglouter() {
    System.out.println("Glouglou");
  }
  public void voler() {
    System.out.println("Je ne vole pas loin");
  }
}
----------

ifdef::slides[=== Exemple concret : le problème]

Vous êtes à court d'objets `Canard` et vous aimeriez utiliser des objets `Dindon` à la place!

ifdef::slides[=== Exemple concret : la solution]

ifdef::slides[.Mise en oeuvre du patron Adaptateur]
[source,java]
----------
public class AdaptateurDindon implements Canard {
  Dindon dindon;

  ...

  public void cancaner() {
    dindon.glouglouter();
  }

  public void voler() {
    // Adaptation du vol
    for(int i=0; i < 5; i++) {
      dindon.voler();
    }
  }
}
----------

=== Le patron Adaptateur

include::pattern/adapteur.txt[]

ifdef::slides[=== Le patron Adaptateur]

ifndef::slides[.Adaptateur sur Google]
image::adaptor-google.png[]


ifdef::slides[:leveloffset: +1]
