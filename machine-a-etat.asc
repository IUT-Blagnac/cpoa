== Un nouveau diagramme UML très utile

ifndef::slides[.Exemple de diagramme d'état]
image::etat1.png[]

Les diagrammes d'*états-transitions* (plus simplement diagramme d'état) d'{UML}
décrivent le comportement interne d'un objet à l'aide d'un automate à états finis.

Les notions importantes de ce diagramme :

[%step]
- états
- actions
- événements déclencheurs
** signaux
** invocations de méthode

ifdef::slides[:leveloffset: -1]

=== Transitions

ifndef::slides[.Transition entre états]
image::etat2.png[]

*Événement*::
  Un signal, une invocation de méthode, etc.
*Condition*::
  Un booléen
*Action*::
  Affectation, invocation de méthode

=== Exemple de transitions

ifndef::slides[.Transition entre états]
image::etat3.png[]

=== Refactoring

On peut remplacer les actions systématiques des transitions entrantes :

ifndef::slides[.Transition entre états]
image::etat4.png[]

par une *transition interne* : `entry` :

ifndef::slides[.Exemple de transition interne]
image::etat5.png[]

=== Transitions internes

ifndef::slides[.Exemple de transitions internes]
image::mdp.png[]

*entry*::
  permet de spécifier une activité qui s'accomplit quand on entre dans l'état.

*exit*::
  permet de spécifier une activité qui s'accomplit quand on sort de l'état.

*do*::
  commence dès que l'activité `entry` est terminée.
  Lorsque cette activité est terminée, une transition
  d'achèvement peut être déclenchée.
  Si une transition se déclenche pendant que l'activité `do`
  est en cours, cette dernière est interrompue et
  l'activité `exit` de l'état s'exécute.

=== Conditions

ifndef::slides[.Les conditions doivent être exclusives]
image::conditions.png[]

ifdef::slides[=== Exercices]

[icon="{iconsdir}/tuxteacher.png"]
[IMPORTANT]
.*QUESTION*
====
. Réalisez un diagramme d'état UML représentant les différents états
de l'eau (liquide, solide, gazeux).
. Réalisez un diagramme d'état UML représentant les états d'un étudiant de son
arrivée en 1ère année à sa sortie de l'IUT en fonction des résultats aux différents
examens (uniquement les années, pas les semestres).
====

ifdef::slides[]

=== Solutions

image::eau.png[]

=== Solutions

image::etud.png[]

endif::slides[]

=== Etats complexes

Un état peut lui-même être doté d'un comportement et donc représenter à lui
seul une machine à état. Par exemple :

ifndef::slides[.Etats "Composite"]
image::sousetats.png[]

ifdef::slides[=== Exercices]

[icon="{iconsdir}/tuxteacher.png"]
[IMPORTANT]
.*QUESTION*
====
Intégrez les semestres aux diagramme précédent (étudiants)
====

=== Notion de concurrence

On peut représenter l'évolution de différentes machines de manière concurrente
(parallèle). Par exemple :

ifndef::slides[.Etats "Concurrents"]
image::concurrence.png[]

ifdef::slides[=== Exercices]

[icon="{iconsdir}/tuxteacher.png"]
[IMPORTANT]
.*QUESTION*
====
Réalisez le diagramme d'état d'une machine à boisson rendant la monnaie.
====

ifdef::slides[]

=== Solution

image::monnaie.png[]

TIP: Source : http://laurent-audibert.developpez.com/Cours-UML/?page=diagramme-etats-transitions)

endif::slides[]

ifdef::slides[:leveloffset: 0]

ifndef::slides[]

TIP: Pour aller plus loin sur ce diagramme : http://laurent-audibert.developpez.com/Cours-UML/?page=diagramme-etats-transitions

endif::slides[]
