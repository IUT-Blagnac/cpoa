== Le patron _proxy_

ifdef::slides[:leveloffset: -1]

=== Le problème

On a besoin de références à un objet, qui soient plus *créatives* et plus
*sophistiquées* qu'un simple pointeur.

=== Le patron _Proxy_

include::pattern/proxy.txt[]

ifdef::slides[=== Le patron _Proxy_]

ifndef::slides[.Proxy sur Google]
image::proxy-google.png[]

=== Utilisations

[%step]
- Une _procuration à distance_ fournit un représentant local d'un objet
situé dans un espace adresse différent.
- Une _procuration virtuelle_ crée des objets lourds à la demande.
- Une _procuration de protection_ contrôle l'accès à l'objet original.
Les procurations de protection sont utiles quand les objets doivent satisfaire
différents droits d'accès.
- Une _référence intelligente_ est le remplaçant d'un pointeur brut, qui
réalise des opérations supplémentaires, lors de l'accès à l'objet. Quelques
utilisations typiques sont :
** décompte du nombre des références faites à un objet réel, de sorte que celui-ci puisse être libéré automatiquement, dés qu'il n'y a plus de références ;
** charger en mémoire un objet persistant quand il est référencé pour la première fois ;
** vérifier, avant d'y accéder, que l'objet réel est verrouillé, pour être sûr qu'aucun autre objet ne pourra le changer.

=== Exemple concret : RMI

**R**emote **M**ethod **I**nvocation

ifdef::slides[.Interface distante]
[source,java]
----------
import java.rmi.*;
public interface MonService extends Remote {
  public String direBonjour() throws RemoteException;
}
----------

ifdef::slides[=== Exemple concret : RMI (suite)]

ifdef::slides[.Le service distant (l'implémentation)]
[source,java]
----------
import java.rmi.*;
import java.rmi.server.*;

￼￼￼￼￼￼￼public class MonServiceImpl extends UnicastRemoteObject implements MonService {
  public String direBonjour() {
    return "Le serveur dit 'Bonjour'";
  }
  public MonServiceImpl() throws RemoteException {}
  public static void main (String[] args) {
    try {
      MonService service = new MonServiceImpl();
      Naming.rebind("BonjourDistant", service);
    } catch(Exception ex) {
      ex.printStackTrace();
    }
  }
}
----------

ifdef::slides[=== Exemple concret : RMI (suite)]

ifdef::slides[.Utilisation]
[source,java]
----------
MonService service =
  (MonService) Naming.lookup("rmi://127.0.0.1/BonjourDistant");
...
service.direBonjour();
----------


ifdef::slides[:leveloffset: +1]
